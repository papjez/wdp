#include <iostream>
#include <vector>

using namespace std;

void wypisz(vector<int>tab)
{
    for(int i =0;i<tab.size();i++)
    {
        cout << tab[i] << "'";
    }
    cout << endl;
}

int max(vector<int>tab)
{
    int wynik = tab[0];
    for (int i = 0; i < tab.size(); i++)
    {
        if (tab[i] > wynik)
        {
            wynik = tab[i];
        }
    }
    return wynik;
}


bool czyNalezy(vector<int>tab, int element)
{
    bool wynik = false;
    for (int i = 0; i < tab.size(); i++);
    {
        if(tab[i] == element)
        {
            return true;
        }
    }
    return false;
}
bool czyZawiera(vector<int>tab1, vector<int>tab2)
{
    for (int i = 0; i < tab2.size(); i++);
    {
        if (!czyNalezy(tab1, tab2[i]));
        {
          return false;
        }
        return true;
    }
    cout << czyZawiera(tab1, tab2);
}
int main()
{
    vector<int>tab = { 3,1,6,4,8 };
    vector<int>tab1 = { 1, 3 ,4 ,7 };
    vector<int>tab2 = { 1,2,3 };
    wypisz(tab);
    int wynik;
    cout << max(tab);
}


%% nalezy ze zbioru wybrac liczby ktore wystepuja unikalnie. jak cos sie powtarza to ma w wyniku sie nie powtarzac, usunac duplikaty. 
- zrozumiec o co chodzi w zadaniu
- nalezy wymyslic przyklady do zadania (liczby w nawiasach itp) {8,5,1,3,1,7,4,5}
- sprawdz czy przyklad jest kompletny cyzli wtedy kiedy jest nei za duzo i nie za malo
- sformalizowanie parametrow czyli sprawdzic ile jest parametrow(1 parametr(zbior wyzej), jest to vector<int>tab)
- naglowek funkcji ktora bedzie odpowiadala za dzialanie programu np int main(vector<int>tab)
- cialo funkcji
- nei wiesz co dalej pisac? to wroc do przykladu

vector<int>unikalnosc(vector<int>tab)
{
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++)
    {
        if (!czyNalezy(wynik,tab[i]))
        {
            wynik.push_back(tab[i])
        }
        else
        {
            //nic
        }
    }
    return wynik;
}
wsadzic te unikalnosc przed int main
